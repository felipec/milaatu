#!/usr/bin/env python

import sys
import json

import MySQLdb
from optparse import OptionParser

parser = OptionParser()
parser.add_option("-n", "--host", default="localhost")

(options, args) = parser.parse_args()

db = MySQLdb.connect(host = options.host,
		user = "test",
		db = "insanity")

run = json.load(sys.stdin)

c = db.cursor()
c.execute("insert into test_runs (hardware, user, date) values ('%s', '%s', '%s')" %
		(run['hw'], run['user'], run['date']))
run_id = db.insert_id()

for e in run['results']:
	c.execute("select id from tests where name='%s'" % (e['name']))
	tid = c.fetchone()[0]
	r = e['result']
	c.execute("insert into test_results (test_id, test_run_id, date, result) values (%i, %i, '%s', %f)" %
			(tid, run_id, e['date'], r))
	rid = db.insert_id()
	if 'error' in e:
		c.execute("insert into test_result_infos (test_result_id, name, value) values (%s, %s, %s)",
				(rid, "error", e['error']))
	if 'in' in e:
		for k, v in e['in'].iteritems():
			c.execute("insert into test_result_infos (test_result_id, name, value) values (%i, '%s', '%s')" %
					(rid, "in." + k, str(v)))
	if 'out' in e:
		for k, v in e['out'].iteritems():
			c.execute("insert into test_result_infos (test_result_id, name, value) values (%i, '%s', '%s')" %
					(rid, "out." + k, str(v)))
	if 'checks' in e:
		for k, v in e['checks'].iteritems():
			c.execute("insert into test_result_checks (test_result_id, name, value) values (%i, '%s', %i)" %
					(rid, k, v))
